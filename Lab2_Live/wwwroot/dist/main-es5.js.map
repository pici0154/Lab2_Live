{"version":3,"sources":["src/app/app.component.html","src/app/counter/counter.component.html","src/app/fetch-data/fetch-data.component.html","src/app/flower-details/flower-details.component.html","src/app/home/home.component.html","src/app/nav-menu/nav-menu.component.html","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/counter/counter.component.ts","src/app/fetch-data/fetch-data.component.ts","src/app/flower-details/flower-details.component.css","src/app/flower-details/flower-details.component.ts","src/app/home/home.component.ts","src/app/nav-menu/nav-menu.component.css","src/app/nav-menu/nav-menu.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<body>\\n    <app-nav-menu></app-nav-menu>\\n\\n    <div class=\\\"container\\\">\\n\\n        <router-outlet></router-outlet>\\n\\n    </div>\\n\\n</body>\\n\"","export default \"<h1>Counter</h1>\\n\\n<p>This is a simple example of an Angular component.</p>\\n\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\n\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\n\\n\\n\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n\\n<p>{{name}}</p>\\n\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n\\n\\n<input type=\\\"text\\\" value=\\\"{{name}}\\\" />\\n\\n\\n\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n\\n\\n<input type=\\\"text\\\" value=\\\"{{name}}\\\" />\\n\\n\\n\\n<p> {{name}}</p>\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\n\\n<p>This component demonstrates fetching data from the server.</p>\\n\\n<p *ngIf=\\\"!flowers\\\"><em>Loading...</em></p>\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"flowers\\\">\\n    <thead>\\n        <tr>\\n            <th>Name</th>\\n            <th>Description</th>\\n            <th>Market price</th>\\n            <th>Upkeep difficulty</th>\\n            <th>Number of comments</th>\\n            <th>Operations</th>\\n            \\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let flower of flowers\\\">\\n            <td>{{ flower.name }}</td>\\n            <td>{{ flower.description }}</td>\\n            <td>{{ flower.marketPrice }}</td>\\n            <td>{{ flower.flowerUpkeepDifficulty }}</td>\\n            <td>{{ flower.numberOfComments }}</td>\\n            <td>\\n                <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/fetch-data', flower.id]\\\" routerLinkActive=\\\"active\\\">Details</a> |\\n                <a class=\\\"btn btn-info\\\">Edit</a> |\\n                <a class=\\\"btn btn-danger\\\" (click)=\\\"delete(flower.id)\\\">Delete</a>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n\\n<p>Add a flower</p>\\n\\n\\n<input [(ngModel)]=\\\"name\\\" />\\n\\n<p>{{name}}</p>\\n\\n<button (click)=\\\"submit()\\\">Submit!</button>\\n\\n\\n<input type=\\\"date\\\" />\\n\"","export default \"\\n<p *ngIf=\\\"!flower\\\"><em>Loading...</em></p>\\n\\n<a [routerLink]=\\\"['/fetch-data']\\\" routerLinkActive=\\\"active\\\">Back</a>\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"flower\\\">\\n    <tbody>\\n        <tr>\\n            <th>Name</th>\\n            <td>{{ flower.name }}</td>\\n        </tr>\\n\\n        <tr>\\n            <th>Description</th>\\n            <td>{{ flower.description }}</td>\\n        </tr>\\n        <tr>\\n            <th>Market price</th>\\n            <td>{{ flower.marketPrice }}</td>\\n        </tr>\\n        <tr>\\n            <th>Upkeep difficulty</th>\\n            <td>{{ flower.flowerUpkeepDifficulty }}</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<h2>Comments</h2>\\n<table *ngIf=\\\"flower\\\">\\n    <thead>\\n        <tr>\\n            <th>Content</th>\\n            <th>Author</th>\\n        </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let comment of flower.comments\\\">\\n        <td>{{ comment.content }}</td>\\n        <td>{{ comment.author }}</td>\\n    </tr>\\n</table>\\n<a [routerLink]=\\\"['/fetch-data']\\\" routerLinkActive=\\\"active\\\">Back</a>\\n\"","export default \"<h1>Hello, world!</h1>\\n<p>Welcome to your new single-page application, built with:</p>\\n<ul>\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\n</ul>\\n<p>To help you get started, we've also set up:</p>\\n<ul>\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\n</ul>\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\n\"","export default \"<header>\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">NetCoreAngularApp2</a>\\n            <button class=\\\"navbar-toggler\\\"\\n                    type=\\\"button\\\"\\n                    data-toggle=\\\"collapse\\\"\\n                    data-target=\\\".navbar-collapse\\\"\\n                    aria-label=\\\"Toggle navigation\\\"\\n                    [attr.aria-expanded]=\\\"isExpanded\\\"\\n                    (click)=\\\"toggle()\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\n                 [ngClass]=\\\"{ show: isExpanded }\\\">\\n                <ul class=\\\"navbar-nav flex-grow\\\">\\n\\n                    <li class=\\\"nav-item\\\"\\n                        [routerLinkActive]=\\\"['link-active']\\\"\\n                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\">Counter</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\">Fetch data</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/my-route']\\\">My route</a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </nav>\\n</header>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { FlowerDetailsComponent } from './flower-details/flower-details.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavMenuComponent,\n        HomeComponent,\n        CounterComponent,\n        FetchDataComponent,\n        FlowerDetailsComponent\n    ],\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n        HttpClientModule,\n        FormsModule,\n        RouterModule.forRoot([\n            { path: '', component: HomeComponent, pathMatch: 'full' },\n            { path: 'counter', component: CounterComponent },\n            {\n                path: 'fetch-data',\n                component: FetchDataComponent,\n                //children: [\n                //    {\n                //        path: 'flower-details/:flowerId',\n                //        component: FlowerDetailsComponent\n                //    }\n                //]\n            },\n            {\n                path: 'fetch-data/:flowerId',\n                component: FlowerDetailsComponent,\n            },\n            { path: 'my-route', component: CounterComponent },\n        ])\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-counter-component',\n    templateUrl: './counter.component.html'\n})\nexport class CounterComponent {\n    public currentCount: number = 2;\n\n    public name: string = \"test\"\n\n    public incrementCounter() {\n        this.currentCount++;\n\n        this.name = '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-fetch-data',\n    templateUrl: './fetch-data.component.html'\n})\nexport class FetchDataComponent {\n    public flowers: Flower[];\n\n    public name: string = \"test\";\n\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\n        this.loadFlowers();\n    }\n\n\n    loadFlowers() {\n        this.http.get<Flower[]>(this.baseUrl + 'api/Flowers').subscribe(result => {\n            this.flowers = result;\n            console.log(this.flowers);\n        }, error => console.error(error));\n    }\n\n    delete(flowerId: string) {\n        if (confirm('Are you sure you want to delete the flower with id ' + flowerId + '?')) {\n            this.http.delete(this.baseUrl + 'api/Flowers/' + flowerId)\n                .subscribe\n                (\n                    result => {\n                        alert('Flower successfully deleted!');\n                        this.loadFlowers();\n                    },\n                    error => alert('Cannot delete flower - maybe it has comments?')\n                )\n        }\n    }\n\n    submit() {\n\n        var flower: Flower = <Flower>{};\n        flower.name = this.name;\n        flower.description = this.name;\n        flower.dateAdded = new Date();\n        flower.flowerUpkeepDifficulty = FlowerUpkeepDifficulty.Easy;\n        flower.marketPrice = 5;\n\n        this.http.post(this.baseUrl + 'api/Flowers', flower).subscribe(result => {\n            console.log('success!');\n            this.loadFlowers();\n        },\n        error => {    \n            if (error.status == 400) {\n                console.log(error.error.errors)\n            }\n        });\n    }\n}\n\ninterface Flower {\n    id: number;\n    dateAdded: Date;\n    name: string;\n    description: string;\n    marketPrice: number;\n    flowerUpkeepDifficulty: FlowerUpkeepDifficulty;\n}\n\nenum FlowerUpkeepDifficulty {\n    Easy = 0,\n    Medium = 1,\n    Hard = 2\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zsb3dlci1kZXRhaWxzL2Zsb3dlci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-flower-details',\n  templateUrl: './flower-details.component.html',\n  styleUrls: ['./flower-details.component.css']\n})\nexport class FlowerDetailsComponent implements OnInit {\n\n    private flower: FlowerWithDetails;\n\n    constructor(\n        private http: HttpClient,\n        @Inject('BASE_URL') private baseUrl: string,\n        private route: ActivatedRoute) {\n\n    }\n\n    loadFlower(flowerId: string) {\n        this.http.get<FlowerWithDetails>(this.baseUrl + 'api/Flowers/' + flowerId).subscribe(result => {\n            this.flower = result;\n            console.log(this.flower);\n        }, error => console.error(error));\n    }\n\n\n    ngOnInit() {\n        this.route.paramMap.subscribe(params => {\n            this.loadFlower(params.get('flowerId'));\n        });\n    }\n}\n\ninterface Comment {\n    content: string,\n    author: string\n}\n\ninterface FlowerWithDetails {\n    dateAdded: Date;\n    name: string;\n    description: string;\n    marketPrice: number;\n    flowerUpkeepDifficulty: string;\n    comments: Comment[];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}